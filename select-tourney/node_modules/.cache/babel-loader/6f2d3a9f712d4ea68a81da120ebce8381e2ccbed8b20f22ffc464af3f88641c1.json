{"ast":null,"code":"var _jsxFileName = \"/Users/ag/Desktop/SelectTourney/select-tourney/src/pages/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { Nav, NavItem, NavLink, TabContent, TabPane, Row } from 'reactstrap';\nimport { useState } from 'react';\nimport TournamentCard from '../components/card/TournamentCard';\nimport { selectAllTournaments, selectCurrentTournaments, selectPastTournaments, selectUpcomingTournaments } from '../features/tournaments/tournamentsSlice';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = props => {\n  _s();\n  var _location$state;\n  const location = useLocation(); // Get the passed state\n\n  // State to track the active tab\n  const [activeTab, setActiveTab] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tab) || \"1\");\n  const allTournaments = useSelector(selectAllTournaments);\n  const currentTournaments = useSelector(selectCurrentTournaments);\n  const pastTournaments = useSelector(selectPastTournaments);\n  const upcomingTournaments = useSelector(selectUpcomingTournaments);\n  console.log('%csrc/pages/DashboardPage.js:24 upcomingTournaments', 'color: #007acc;', upcomingTournaments);\n  // Function to toggle the active tab\n  const toggleTab = tab => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dashboard\",\n    className: \"ts-alignment ts-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      tabs: true,\n      className: \"border-0\",\n      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: `${activeTab === \"1\" ? \"active\" : \"\"} `,\n          onClick: () => toggleTab(\"1\"),\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: activeTab === \"2\" ? \"active\" : \"\",\n          onClick: () => toggleTab(\"2\"),\n          children: \"Upcoming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: activeTab === \"3\" ? \"active\" : \"\",\n          onClick: () => toggleTab(\"3\"),\n          children: \"Past\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n      activeTab: activeTab,\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tabId: \"1\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: currentTournaments.map((item, idx) => {\n            return item && /*#__PURE__*/_jsxDEV(TournamentCard, {\n              item: item,\n              tournamentDate: \"current\"\n            }, `current-tournament${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tabId: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: upcomingTournaments.map((item, idx) => {\n            return item && /*#__PURE__*/_jsxDEV(TournamentCard, {\n              item: item,\n              tournamentDate: \"Upcoming\"\n            }, `current-tournament${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tabId: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: pastTournaments.map((item, idx) => {\n            return item && /*#__PURE__*/_jsxDEV(TournamentCard, {\n              item: item,\n              tournamentDate: \"past\"\n            }, `current-tournament${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"/Hes8MzZAXAeGJtG3uF1ZPIjtNk=\", false, function () {\n  return [useLocation, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useSelector","Nav","NavItem","NavLink","TabContent","TabPane","Row","useState","TournamentCard","selectAllTournaments","selectCurrentTournaments","selectPastTournaments","selectUpcomingTournaments","useLocation","jsxDEV","_jsxDEV","Dashboard","props","_s","_location$state","location","activeTab","setActiveTab","state","tab","allTournaments","currentTournaments","pastTournaments","upcomingTournaments","console","log","toggleTab","id","className","children","tabs","onClick","fileName","_jsxFileName","lineNumber","columnNumber","tabId","map","item","idx","tournamentDate","_c","$RefreshReg$"],"sources":["/Users/ag/Desktop/SelectTourney/select-tourney/src/pages/DashboardPage.js"],"sourcesContent":["import {useSelector} from 'react-redux';\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane,\n    Row,\n  } from 'reactstrap';\n  import { useState } from 'react';\n  import TournamentCard from '../components/card/TournamentCard';\n  import {selectAllTournaments, selectCurrentTournaments, selectPastTournaments, selectUpcomingTournaments } from '../features/tournaments/tournamentsSlice';\n  import { useLocation } from \"react-router-dom\";\n  \n  const Dashboard = (props) => {\n    const location = useLocation(); // Get the passed state\n\n    // State to track the active tab\n    const [activeTab, setActiveTab] = useState(location.state?.tab || \"1\"); \n    const allTournaments = useSelector(selectAllTournaments);\n    const currentTournaments = useSelector(selectCurrentTournaments);\n    const pastTournaments = useSelector(selectPastTournaments);\n    const upcomingTournaments = useSelector(selectUpcomingTournaments);\nconsole.log('%csrc/pages/DashboardPage.js:24 upcomingTournaments', 'color: #007acc;', upcomingTournaments);\n    // Function to toggle the active tab\n    const toggleTab = (tab) => {\n      if (activeTab !== tab) {\n        setActiveTab(tab);\n      }\n    };\n  \n    return (\n      <div id=\"dashboard\" className=\"ts-alignment ts-dashboard\">\n        <Nav tabs className=\"border-0\">\n          <NavItem>\n            <NavLink\n              className={`${activeTab === \"1\" ? \"active\" : \"\"} `}\n              onClick={() => toggleTab(\"1\")}\n            >\n              Current\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={activeTab === \"2\" ? \"active\" : \"\"}\n              onClick={() => toggleTab(\"2\")}\n            >\n              Upcoming\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={activeTab === \"3\" ? \"active\" : \"\"}\n              onClick={() => toggleTab(\"3\")}\n            >\n              Past\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab} className=\"mt-5\">\n          <TabPane tabId=\"1\">\n            <Row>\n            {currentTournaments.map((item, idx) => {\n                 return (\n                    item && (\n                            <TournamentCard item={item} tournamentDate=\"current\" key={`current-tournament${idx}`}/>\n                    )\n                );\n            })}\n              \n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n           <Row>\n           {upcomingTournaments.map((item, idx) => {\n                 return (\n                    item && (\n                            <TournamentCard item={item} tournamentDate=\"Upcoming\" key={`current-tournament${idx}`}/>\n                    )\n                );\n            })}\n           </Row>\n             \n          </TabPane>\n          <TabPane tabId=\"3\">\n            <Row>\n            {pastTournaments.map((item, idx) => {\n                 return (\n                    item && (\n                            <TournamentCard item={item} tournamentDate=\"past\" key={`current-tournament${idx}`}/>\n                    )\n                );\n            })}\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  };\n  \n  export default Dashboard;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}