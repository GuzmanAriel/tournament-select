{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport { baseUrl } from '../../app/shared/baseUrl';\nexport const fetchTournaments = createAsyncThunk('tournaments/fetchTournaments', async () => {\n  const response = await fetch(baseUrl + 'tournaments');\n  if (!response.ok) {\n    return Promise.reject('Unable to fetch, status: ' + response.status);\n  }\n  const data = await response.json();\n  return data;\n});\nconst initialState = {\n  tournamentsArray: TOURNAMENTS\n};\nconst tournamentsSlice = createSlice({\n  name: 'tournaments',\n  initialState\n});\nexport const tournamentsReducer = tournamentsSlice.reducer;\nexport const selectAllTournaments = state => {\n  return state.tournaments.tournamentsArray;\n};\nexport const selectCurrentTournaments = state => {\n  const today = new Date().toISOString().split('T')[0];\n  return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc.startsWith(today));\n};\nexport const selectPastTournaments = state => {\n  //return filter of past tournaments\n  const today = new Date().toISOString();\n  return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc < today);\n};\nexport const selectUpcomingTournaments = state => {\n  //return filter of past tournaments\n  const today = new Date().toISOString();\n  return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc > today);\n};\nexport const selectTournamentById = id => state => {\n  return state.tournaments.tournamentsArray.find(tournament => tournament.id === parseInt(id));\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","baseUrl","fetchTournaments","response","fetch","ok","Promise","reject","status","data","json","initialState","tournamentsArray","TOURNAMENTS","tournamentsSlice","name","tournamentsReducer","reducer","selectAllTournaments","state","tournaments","selectCurrentTournaments","today","Date","toISOString","split","filter","tournament","date_utc","startsWith","selectPastTournaments","selectUpcomingTournaments","selectTournamentById","id","find","parseInt"],"sources":["/Users/ag/Desktop/SelectTourney/select-tourney/src/features/tournaments/tournamentsSlice.js"],"sourcesContent":["\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import { CAMPSITES } from '../../app/shared/CAMPSITES'\nimport { baseUrl } from '../../app/shared/baseUrl';\n\n\nexport const fetchTournaments = createAsyncThunk(\n    'tournaments/fetchTournaments',\n    async () => {\n        const response = await fetch(baseUrl + 'tournaments');\n        if (!response.ok) {\n            return Promise.reject('Unable to fetch, status: ' + response.status);\n        }\n        const data = await response.json();\n        return data;\n    }\n);\n\nconst initialState = {\n    tournamentsArray: TOURNAMENTS\n};\n\nconst tournamentsSlice = createSlice({\n    name: 'tournaments',\n    initialState\n});\n\nexport const tournamentsReducer = tournamentsSlice.reducer;\n\nexport const selectAllTournaments = (state) => {\n    return state.tournaments.tournamentsArray;\n};\n\nexport const selectCurrentTournaments = (state) => {\n    const today = new Date().toISOString().split('T')[0];\n    return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc.startsWith(today));\n};\n\nexport const selectPastTournaments = (state) => {\n    //return filter of past tournaments\n    const today = new Date().toISOString();\n    return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc < today);\n};\n\nexport const selectUpcomingTournaments = (state) => {\n    //return filter of past tournaments\n    const today = new Date().toISOString();\n    return state.tournaments.tournamentsArray.filter(tournament => tournament.date_utc > today);\n};\n\nexport const selectTournamentById = (id) => (state) => {\n    return state.tournaments.tournamentsArray.find(\n        (tournament) => tournament.id === parseInt(id)\n    );\n};\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE;AACA,SAASC,OAAO,QAAQ,0BAA0B;AAGlD,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC5C,8BAA8B,EAC9B,YAAY;EACR,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAG,aAAa,CAAC;EACrD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,OAAOC,OAAO,CAACC,MAAM,CAAC,2BAA2B,GAAGJ,QAAQ,CAACK,MAAM,CAAC;EACxE;EACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CACJ,CAAC;AAED,MAAME,YAAY,GAAG;EACjBC,gBAAgB,EAAEC;AACtB,CAAC;AAED,MAAMC,gBAAgB,GAAGf,WAAW,CAAC;EACjCgB,IAAI,EAAE,aAAa;EACnBJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,kBAAkB,GAAGF,gBAAgB,CAACG,OAAO;AAE1D,OAAO,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAC3C,OAAOA,KAAK,CAACC,WAAW,CAACR,gBAAgB;AAC7C,CAAC;AAED,OAAO,MAAMS,wBAAwB,GAAIF,KAAK,IAAK;EAC/C,MAAMG,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,OAAON,KAAK,CAACC,WAAW,CAACR,gBAAgB,CAACc,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,QAAQ,CAACC,UAAU,CAACP,KAAK,CAAC,CAAC;AACzG,CAAC;AAED,OAAO,MAAMQ,qBAAqB,GAAIX,KAAK,IAAK;EAC5C;EACA,MAAMG,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACtC,OAAOL,KAAK,CAACC,WAAW,CAACR,gBAAgB,CAACc,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,QAAQ,GAAGN,KAAK,CAAC;AAC/F,CAAC;AAED,OAAO,MAAMS,yBAAyB,GAAIZ,KAAK,IAAK;EAChD;EACA,MAAMG,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACtC,OAAOL,KAAK,CAACC,WAAW,CAACR,gBAAgB,CAACc,MAAM,CAACC,UAAU,IAAIA,UAAU,CAACC,QAAQ,GAAGN,KAAK,CAAC;AAC/F,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAIC,EAAE,IAAMd,KAAK,IAAK;EACnD,OAAOA,KAAK,CAACC,WAAW,CAACR,gBAAgB,CAACsB,IAAI,CACzCP,UAAU,IAAKA,UAAU,CAACM,EAAE,KAAKE,QAAQ,CAACF,EAAE,CACjD,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}