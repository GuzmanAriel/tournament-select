{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Connectors from '../components/connector';\nimport { getCalculatedStyles } from '../settings';\nimport { calculatePositionOfMatchUpperBracket, calculatePositionOfMatchLowerBracket } from './calculate-match-position';\nconst ConnectorsUpper = ({\n  bracketSnippet,\n  rowIndex,\n  columnIndex,\n  style,\n  offsetY = 0,\n  isLowerBracket = false\n}) => {\n  const {\n    columnWidth,\n    rowHeight,\n    canvasPadding\n  } = getCalculatedStyles(style);\n  const isUpperSeedingRound = isLowerBracket && columnIndex % 2 !== 0;\n  const positioningFunction = isLowerBracket ? calculatePositionOfMatchLowerBracket : calculatePositionOfMatchUpperBracket;\n  const currentMatchPosition = positioningFunction(rowIndex, columnIndex, {\n    canvasPadding,\n    rowHeight,\n    columnWidth,\n    offsetY\n  });\n  const previousBottomPosition = isUpperSeedingRound ? rowIndex : (rowIndex + 1) * 2 - 1;\n  const previousTopMatchPosition = !isUpperSeedingRound && positioningFunction(previousBottomPosition - 1, columnIndex - 1, {\n    canvasPadding,\n    rowHeight,\n    columnWidth,\n    offsetY\n  });\n  const previousBottomMatchPosition = positioningFunction(previousBottomPosition, columnIndex - 1, {\n    canvasPadding,\n    rowHeight,\n    columnWidth,\n    offsetY\n  });\n  return _jsx(Connectors, {\n    bracketSnippet: bracketSnippet,\n    previousBottomMatchPosition: previousBottomMatchPosition,\n    previousTopMatchPosition: previousTopMatchPosition,\n    currentMatchPosition: currentMatchPosition,\n    style: style\n  });\n};\nexport default ConnectorsUpper;\n//# sourceMappingURL=upper-connectors.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}