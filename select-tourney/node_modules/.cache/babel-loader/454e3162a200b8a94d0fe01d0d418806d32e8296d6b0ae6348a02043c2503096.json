{"ast":null,"code":"var _jsxFileName = \"/Users/ag/Desktop/SelectTourney/select-tourney/src/components/pools/PoolMatches.js\";\nimport { Table } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PoolMatches = () => {\n  const teams = [{\n    team_name: \"Thunder Strikers\"\n  }, {\n    team_name: \"Blazing Hawks\"\n  }, {\n    team_name: \"Iron Titans\"\n  }, {\n    team_name: \"Shadow Wolves\"\n  }, {\n    team_name: \"Storm Breakers\"\n  }, {\n    team_name: \"Crimson Raiders\"\n  }];\n\n  // Generate all possible matchups (each team plays against every other team once)\n  const matches = [];\n  for (let i = 0; i < teams.length; i++) {\n    for (let j = i + 1; j < teams.length; j++) {\n      matches.push({\n        team1: teams[i].team_name,\n        team2: teams[j].team_name,\n        set1: Math.floor(Math.random() * 3),\n        // Fake set score (0-2)\n        set2: Math.floor(Math.random() * 3) // Fake set score (0-2)\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Set 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Set 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: match.team1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: match.team2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: match.set1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: match.set2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = PoolMatches;\nexport default PoolMatches;\nvar _c;\n$RefreshReg$(_c, \"PoolMatches\");","map":{"version":3,"names":["Table","jsxDEV","_jsxDEV","PoolMatches","teams","team_name","matches","i","length","j","push","team1","team2","set1","Math","floor","random","set2","children","fileName","_jsxFileName","lineNumber","columnNumber","bordered","map","match","index","_c","$RefreshReg$"],"sources":["/Users/ag/Desktop/SelectTourney/select-tourney/src/components/pools/PoolMatches.js"],"sourcesContent":["import { Table } from 'reactstrap';\n\nconst PoolMatches = () => { \n    const teams = [\n        { team_name: \"Thunder Strikers\" },\n        { team_name: \"Blazing Hawks\" },\n        { team_name: \"Iron Titans\" },\n        { team_name: \"Shadow Wolves\" },\n        { team_name: \"Storm Breakers\" },\n        { team_name: \"Crimson Raiders\" },\n    ];\n\n    // Generate all possible matchups (each team plays against every other team once)\n    const matches = [];\n    for (let i = 0; i < teams.length; i++) {\n        for (let j = i + 1; j < teams.length; j++) {\n            matches.push({\n                team1: teams[i].team_name,\n                team2: teams[j].team_name,\n                set1: Math.floor(Math.random() * 3), // Fake set score (0-2)\n                set2: Math.floor(Math.random() * 3), // Fake set score (0-2)\n            });\n        }\n    }\n\n    return (\n        <div>\n            <h3>Matches</h3>\n            <Table bordered>\n                <thead>\n                    <tr>\n                        <th>Team 1</th>\n                        <th>Team 2</th>\n                        <th>Set 1</th>\n                        <th>Set 2</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {matches.map((match, index) => (\n                        <tr key={index}>\n                            <td>{match.team1}</td>\n                            <td>{match.team2}</td>\n                            <td>{match.set1}</td>\n                            <td>{match.set2}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default PoolMatches;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}