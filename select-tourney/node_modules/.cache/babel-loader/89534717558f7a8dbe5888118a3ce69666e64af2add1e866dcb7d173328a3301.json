{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport MatchWrapper from '../core/match-wrapper';\nimport { calculatePositionOfFinalGame } from './calculate-match-position';\nimport Connectors from './extra-final-connectors';\nconst ExtraFinal = ({\n  match,\n  rowIndex,\n  columnIndex,\n  gameHeight,\n  gameWidth,\n  calculatedStyles,\n  onMatchClick,\n  onPartyClick,\n  matchComponent,\n  bracketSnippet,\n  numOfUpperRounds,\n  numOfLowerRounds,\n  upperBracketHeight,\n  lowerBracketHeight\n}) => {\n  const {\n    canvasPadding,\n    columnWidth,\n    rowHeight,\n    roundHeader\n  } = calculatedStyles;\n  const {\n    x,\n    y\n  } = calculatePositionOfFinalGame(rowIndex, columnIndex, {\n    canvasPadding,\n    columnWidth,\n    rowHeight,\n    gameHeight,\n    upperBracketHeight,\n    lowerBracketHeight\n  });\n  return _jsxs(_Fragment, {\n    children: [columnIndex !== 0 && _jsx(Connectors, Object.assign({}, {\n      numOfUpperRounds,\n      numOfLowerRounds,\n      rowIndex,\n      columnIndex,\n      gameWidth,\n      gameHeight,\n      lowerBracketHeight,\n      upperBracketHeight,\n      style: calculatedStyles,\n      bracketSnippet\n    })), _jsx(\"g\", {\n      children: _jsx(MatchWrapper, {\n        x: x,\n        y: y + (roundHeader.isShown ? roundHeader.height + roundHeader.marginBottom : 0),\n        rowIndex: rowIndex,\n        columnIndex: columnIndex,\n        match: match,\n        previousBottomMatch: bracketSnippet.previousBottomMatch,\n        topText: match.startTime,\n        bottomText: match.name,\n        teams: match.participants,\n        onMatchClick: onMatchClick,\n        onPartyClick: onPartyClick,\n        style: calculatedStyles,\n        matchComponent: matchComponent\n      })\n    })]\n  });\n};\nexport default ExtraFinal;\n//# sourceMappingURL=extra-final.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}