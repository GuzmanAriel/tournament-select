{"ast":null,"code":"var _jsxFileName = \"/Users/ag/Desktop/SelectTourney/select-tourney/src/components/google/PlacesAutoComplete.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GOOGLE_API_KEY = \"AIzaSyDsb32EFWC9jVcxoQe6chZ55HRU6ibVC6Y\"; // Store in environment variables\n\nconst PlaceAutocompleteComponent = props => {\n  _s();\n  const {\n    setFieldValue\n  } = props;\n  const inputSearch = useRef(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  useEffect(() => {\n    // ✅ Load Google Maps Places API dynamically\n    const loadGoogleMaps = async () => {\n      if (window.google && window.google.maps) {\n        initializeAutocomplete();\n        return;\n      }\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API_KEY}`;\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeAutocomplete;\n      document.body.appendChild(script);\n    };\n\n    // ✅ Initialize PlaceAutocompleteElement\n    const initializeAutocomplete = async () => {\n      try {\n        // @ts-ignore\n        await window.google.maps.importLibrary(\"places\");\n        const searchBox = new window.google.maps.places.SearchBox(inputSearch.current);\n        searchBox.addListener(\"places_changed\", () => {\n          const places = searchBox.getPlaces();\n          setFieldValue('location', places[0].formatted_address);\n          if (places.length == 0) {\n            return;\n          }\n        });\n      } catch (error) {\n        console.error(\"Google Maps API failed to load:\", error);\n      }\n    };\n    loadGoogleMaps();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"location\",\n      ref: inputSearch,\n      className: \"form-control bg-transparent text-white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(PlaceAutocompleteComponent, \"38CyHVta1mBN8FnT5QjSXNHFU+8=\");\n_c = PlaceAutocompleteComponent;\nexport default PlaceAutocompleteComponent;\nvar _c;\n$RefreshReg$(_c, \"PlaceAutocompleteComponent\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GOOGLE_API_KEY","PlaceAutocompleteComponent","props","_s","setFieldValue","inputSearch","selectedPlace","setSelectedPlace","loadGoogleMaps","window","google","maps","initializeAutocomplete","script","document","createElement","src","async","defer","onload","body","appendChild","importLibrary","searchBox","places","SearchBox","current","addListener","getPlaces","formatted_address","length","error","console","children","name","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ag/Desktop/SelectTourney/select-tourney/src/components/google/PlacesAutoComplete.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst GOOGLE_API_KEY = \"AIzaSyDsb32EFWC9jVcxoQe6chZ55HRU6ibVC6Y\"; // Store in environment variables\n\nconst PlaceAutocompleteComponent = (props) => {\n  const {setFieldValue} = props;\n  const inputSearch = useRef(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n\n  useEffect(() => {\n    // ✅ Load Google Maps Places API dynamically\n    const loadGoogleMaps = async () => {\n      if (window.google && window.google.maps) {\n        initializeAutocomplete();\n        return;\n      }\n\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API_KEY}`;\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeAutocomplete;\n      document.body.appendChild(script);\n    };\n\n    // ✅ Initialize PlaceAutocompleteElement\n    const initializeAutocomplete = async () => {\n      try {\n        // @ts-ignore\n        await window.google.maps.importLibrary(\"places\");\n\n\n        const searchBox = new window.google.maps.places.SearchBox(inputSearch.current);\n\n        searchBox.addListener(\"places_changed\", () => {\n          const places = searchBox.getPlaces();\n\n          setFieldValue('location', places[0].formatted_address);\n          if (places.length == 0) {\n            return;\n          }\n        });    \n      } catch (error) {\n        console.error(\"Google Maps API failed to load:\", error);\n      }\n    };\n\n    loadGoogleMaps();\n  }, []);\n\n  return (\n    <>\n    {/* Container for Google Places input */}\n    <input name=\"location\" ref={inputSearch} className=\"form-control bg-transparent text-white\"/>\n\n    \n    </>\n      \n  );\n};\n\nexport default PlaceAutocompleteComponent;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,cAAc,GAAG,yCAAyC,CAAC,CAAC;;AAElE,MAAMC,0BAA0B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM;IAACC;EAAa,CAAC,GAAGF,KAAK;EAC7B,MAAMG,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;QACvCC,sBAAsB,CAAC,CAAC;QACxB;MACF;MAEA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,+CAA+ChB,cAAc,EAAE;MAC5Ea,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;MACnBL,MAAM,CAACM,MAAM,GAAGP,sBAAsB;MACtCE,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IACnC,CAAC;;IAED;IACA,MAAMD,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF;QACA,MAAMH,MAAM,CAACC,MAAM,CAACC,IAAI,CAACW,aAAa,CAAC,QAAQ,CAAC;QAGhD,MAAMC,SAAS,GAAG,IAAId,MAAM,CAACC,MAAM,CAACC,IAAI,CAACa,MAAM,CAACC,SAAS,CAACpB,WAAW,CAACqB,OAAO,CAAC;QAE9EH,SAAS,CAACI,WAAW,CAAC,gBAAgB,EAAE,MAAM;UAC5C,MAAMH,MAAM,GAAGD,SAAS,CAACK,SAAS,CAAC,CAAC;UAEpCxB,aAAa,CAAC,UAAU,EAAEoB,MAAM,CAAC,CAAC,CAAC,CAACK,iBAAiB,CAAC;UACtD,IAAIL,MAAM,CAACM,MAAM,IAAI,CAAC,EAAE;YACtB;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDvB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eAEApC,OAAA;MAAOqC,IAAI,EAAC,UAAU;MAACC,GAAG,EAAE9B,WAAY;MAAC+B,SAAS,EAAC;IAAwC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAG3F,CAAC;AAGP,CAAC;AAACrC,EAAA,CAvDIF,0BAA0B;AAAAwC,EAAA,GAA1BxC,0BAA0B;AAyDhC,eAAeA,0BAA0B;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}